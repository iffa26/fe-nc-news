{"version":3,"sources":["components/PagesAndSections/Header.jsx","components/PagesAndSections/NavBar.jsx","api.js","components/ButtonsAndForms/AddComment.jsx","components/ButtonsAndForms/VotingButtons.jsx","components/ButtonsAndForms/DeleteCommentButton.jsx","components/Cards/CommentCard.jsx","components/Lists/ArticleComments.jsx","components/PagesAndSections/ErrorPage.jsx","components/PagesAndSections/Loading.jsx","components/PagesAndSections/SingleArticle.jsx","components/Cards/ArticleCard.jsx","components/ButtonsAndForms/SortByButtons.jsx","components/Lists/ArticlesList.jsx","components/Lists/TopicsList.jsx","components/ButtonsAndForms/LoginForm.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","NavBar","to","getArticles","topic_slug","sort_by","order","axios","get","params","topic","then","data","articles","getSingleArticle","article_id","article","getCommentsByArticleId","comments","getTopics","topics","postComment","body","username","post","comment","patchArticleVotes","newVote","patch","inc_votes","patchCommentVotes","comment_id","deleteComment","delete","AddComment","state","newCommentInput","handleInput","event","target","name","value","setState","handleSubmit","preventDefault","userLoggedIn","props","addComment","this","onSubmit","type","onChange","disabled","React","Component","VotingButtons","changeVotesBy","handleClick","updateVotes","api","votes","onClick","prevProps","prevState","DeleteCommentButton","removeComment","CommentCard","deleteErr","author","created_at","ArticleComments","postErr","fetchCommentsByArticleId","catch","err","newComments","filter","map","key","ErrorPage","response","status","msg","Loading","SingleArticle","isLoading","fetchSingleArticle","title","ArticleCard","comment_count","SortByButtons","sortArticles","id","ArticlesList","fetchArticles","newOrder","TopicsList","fetchTopics","slug","LoginForm","loginLogout","App","updateUserTo","path","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d06fe52.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return <h1>Northcoders News</h1>;\n};\n\nexport { Header };\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nfunction NavBar() {\n  return (\n    <nav>\n      <Link to=\"/\">\n        <button>Home</button>\n      </Link>\n      <Link to=\"/topics\">\n        <button>Topics</button>\n      </Link>\n      <Link to=\"/articles\">\n        <button>Articles</button>\n      </Link>\n    </nav>\n  );\n}\n\nexport { NavBar };\n","import axios from \"axios\";\n\nexport const getArticles = (topic_slug, sort_by, order) => {\n  return axios\n    .get(\"http://nc-news-iffa.herokuapp.com/api/articles\", {\n      params: { topic: topic_slug, sort_by, order }\n    })\n    .then(({ data: { articles } }) => {\n      return articles;\n    });\n};\n\nexport const getSingleArticle = article_id => {\n  return axios\n    .get(`http://nc-news-iffa.herokuapp.com/api/articles/${article_id}`)\n    .then(({ data: { article } }) => {\n      return article;\n    });\n};\n\nexport const getCommentsByArticleId = article_id => {\n  return axios\n    .get(\n      `http://nc-news-iffa.herokuapp.com/api/articles/${article_id}/comments`\n    )\n    .then(({ data: { comments } }) => {\n      return comments;\n    });\n};\n\nexport const getTopics = () => {\n  return axios\n    .get(\"http://nc-news-iffa.herokuapp.com/api/topics\")\n    .then(({ data: { topics } }) => {\n      return topics;\n    });\n};\n\nexport const postComment = (article_id, body, username) => {\n  return axios\n    .post(\n      `http://nc-news-iffa.herokuapp.com/api/articles/${article_id}/comments`,\n      { username, body }\n    )\n    .then(({ data: { comment } }) => {\n      return comment;\n    });\n};\n\nexport const patchArticleVotes = (article_id, newVote) => {\n  return axios\n    .patch(`http://nc-news-iffa.herokuapp.com/api/articles/${article_id}`, {\n      inc_votes: newVote\n    })\n    .then(({ data: { article } }) => {\n      return article;\n    });\n};\n\nexport const patchCommentVotes = (comment_id, newVote) => {\n  return axios\n    .patch(`http://nc-news-iffa.herokuapp.com/api/comments/${comment_id}`, {\n      inc_votes: newVote\n    })\n    .then(({ data: { comment } }) => {\n      return comment;\n    });\n};\n\nexport const deleteComment = comment_id => {\n  return axios.delete(\n    `http://nc-news-iffa.herokuapp.com/api/comments/${comment_id}`\n  );\n};\n\n/*\naxios.get('/data', {\n  params: {\n    ID: 12345,\n    all_data: true,\n  },\n});\n\nwill evalutate to:\ndata?ID=12345&all_data=true\n*/\n","import React from \"react\";\n\nclass AddComment extends React.Component {\n  state = {\n    newCommentInput: \"\"\n  };\n\n  render() {\n    const { newCommentInput } = this.state;\n    const { userLoggedIn } = this.props;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"newCommentInput\"\n          onChange={this.handleInput}\n          value={newCommentInput}\n        />\n        <button disabled={userLoggedIn === null}>post!</button>\n        {!userLoggedIn && <p>Login to comment and vote!</p>}\n      </form>\n    );\n  }\n\n  handleInput = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { newCommentInput } = this.state;\n    const { userLoggedIn } = this.props;\n    this.props.addComment(newCommentInput, userLoggedIn);\n    this.setState({ newCommentInput: \"\" });\n  };\n}\n\nexport { AddComment };\n","import React from \"react\";\nimport * as api from \"../../api\";\n\nclass VotingButtons extends React.Component {\n  state = { changeVotesBy: 0 };\n  render() {\n    const { userLoggedIn } = this.props;\n\n    return (\n      <p>\n        votes: {this.props.votes + this.state.changeVotesBy}\n        <button\n          onClick={() => this.handleClick(1)}\n          disabled={this.state.changeVotesBy > 0 || userLoggedIn === null}\n        >\n          +\n        </button>\n        <button\n          onClick={() => this.handleClick(-1)}\n          disabled={this.state.changeVotesBy < 0 || userLoggedIn === null}\n        >\n          -\n        </button>\n      </p>\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.changeVotesBy !== 0) this.setState({ changeVotesBy: 0 });\n  }\n\n  handleClick = changeVotesBy => {\n    const { article_id, comment_id } = this.props;\n    if (article_id) {\n      this.setState({ changeVotesBy });\n    }\n    if (comment_id) {\n      this.setState({ changeVotesBy });\n    }\n    this.updateVotes(changeVotesBy);\n  };\n\n  updateVotes = changeVotesBy => {\n    const { article_id, comment_id } = this.props;\n\n    if (article_id) api.patchArticleVotes(article_id, changeVotesBy);\n    if (comment_id) api.patchCommentVotes(comment_id, changeVotesBy);\n  };\n}\n\nexport { VotingButtons };\n","import React from \"react\";\n\nfunction DeleteCommentButton(props) {\n  const { comment_id, removeComment } = props;\n  return (\n    <button\n      onClick={() => {\n        removeComment(comment_id);\n      }}\n    >\n      delete this comment?\n    </button>\n  );\n}\n\nexport { DeleteCommentButton };\n","import React from \"react\";\nimport { VotingButtons } from \"../ButtonsAndForms/VotingButtons\";\nimport { DeleteCommentButton } from \"../ButtonsAndForms/DeleteCommentButton\";\n\nfunction CommentCard(props) {\n  const { comment, userLoggedIn, removeComment, deleteErr } = props;\n  return (\n    <li>\n      <p>{comment.body}</p>\n      <div>\n        @{comment.author}\n        <VotingButtons\n          comment_id={comment.comment_id}\n          votes={comment.votes}\n          userLoggedIn={userLoggedIn}\n        />\n      </div>\n      <p>{comment.created_at}</p>\n      {userLoggedIn === comment.author && (\n        <DeleteCommentButton\n          comment_id={comment.comment_id}\n          removeComment={removeComment}\n          userLoggedIn={userLoggedIn}\n        />\n      )}\n      {deleteErr && <p>error deleting comment, try again later</p>}\n    </li>\n  );\n}\n\nexport { CommentCard };\n","import React from \"react\";\nimport * as api from \"../../api\";\nimport { AddComment } from \"../ButtonsAndForms/AddComment\";\nimport { CommentCard } from \"../Cards/CommentCard\";\n\nclass ArticleComments extends React.Component {\n  state = {\n    comments: null,\n    postErr: null,\n    deleteErr: null\n  };\n\n  render() {\n    const { comments, postErr, deleteErr } = this.state;\n    const { userLoggedIn } = this.props;\n\n    if (comments) {\n      return (\n        <section>\n          ArticleComments\n          <AddComment\n            userLoggedIn={userLoggedIn}\n            addComment={this.addComment}\n          />\n          {postErr && <p>Error posting comment, try again later</p>}\n          <ul>\n            {comments.map(comment => {\n              return (\n                <CommentCard\n                  key={comment.comment_id}\n                  comment={comment}\n                  userLoggedIn={userLoggedIn}\n                  removeComment={this.removeComment}\n                  deleteErr={deleteErr}\n                />\n              );\n            })}\n          </ul>\n        </section>\n      );\n    } else return <section></section>;\n  }\n\n  componentDidMount() {\n    this.fetchCommentsByArticleId();\n  }\n\n  fetchCommentsByArticleId = () => {\n    api.getCommentsByArticleId(this.props.article_id).then(comments => {\n      this.setState({ comments });\n    });\n  };\n\n  addComment = (newCommentInput, userLoggedIn) => {\n    const { article_id } = this.props;\n\n    api\n      .postComment(article_id, newCommentInput, userLoggedIn)\n      .then(comment => {\n        this.setState({\n          comments: [comment, ...this.state.comments],\n          postErr: null\n        });\n      })\n      .catch(err => {\n        this.setState({ postErr: err });\n      });\n  };\n\n  removeComment = comment_id => {\n    api.deleteComment(comment_id).catch(err => {\n      this.setState({ deleteErr: err });\n    });\n    const newComments = this.state.comments.filter(comment => {\n      return comment.comment_id !== comment_id;\n    });\n    this.setState({ comments: newComments, deleteErr: null });\n  };\n}\n\nexport { ArticleComments };\n","import React from \"react\";\n\nfunction ErrorPage(props) {\n  const { status, data } = props.err.response;\n\n  return (\n    <section>\n      error!\n      <p>status:</p>\n      {status} {data.msg}\n      <p></p>\n    </section>\n  );\n}\n\nexport { ErrorPage };\n","import React from \"react\";\n\nfunction Loading() {\n  return (\n    <section>\n      <p> Loading...</p>\n    </section>\n  );\n}\n\nexport { Loading };\n","import React from \"react\";\nimport * as api from \"../../api\";\nimport { ArticleComments } from \"../Lists/ArticleComments\";\nimport { VotingButtons } from \"../ButtonsAndForms/VotingButtons\";\nimport { ErrorPage } from \"./ErrorPage\";\nimport { Loading } from \"./Loading\";\n\nclass SingleArticle extends React.Component {\n  state = { article: null, err: null, isLoading: true };\n\n  render() {\n    const { article, err } = this.state;\n    const { userLoggedIn } = this.props;\n\n    if (err) return <ErrorPage err={err} />;\n    if (article) {\n      return (\n        <main>\n          <h2>{article.title}</h2>\n          <p>{article.body}</p>\n          <VotingButtons\n            votes={article.votes}\n            article_id={article.article_id}\n            userLoggedIn={userLoggedIn}\n          />\n          <ArticleComments\n            article_id={article.article_id}\n            userLoggedIn={userLoggedIn}\n          />\n        </main>\n      );\n    } else\n      return (\n        <main>\n          <Loading />\n        </main>\n      );\n  }\n\n  componentDidMount() {\n    this.fetchSingleArticle();\n  }\n\n  fetchSingleArticle = () => {\n    const { article_id } = this.props;\n    api\n      .getSingleArticle(article_id)\n      .then(article => {\n        this.setState({ article, err: null });\n      })\n      .catch(err => {\n        this.setState({ err });\n      });\n  };\n}\n\nexport { SingleArticle };\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nfunction ArticleCard(props) {\n  const { article } = props;\n  return (\n    <li key={article.article_id}>\n      <Link to={`/article/${article.article_id}`}>\n        <h3>{article.title}</h3>\n      </Link>\n      <Link to={`/articles/topic/${article.topic}`}>\n        <h4>{article.topic}</h4>\n      </Link>\n      <h4> {article.comment_count} comments</h4>\n      <h4> {article.votes} votes</h4>\n      <h4> {article.created_at} </h4>\n    </li>\n  );\n}\n\nexport { ArticleCard };\n","import React from \"react\";\n\nfunction SortByButtons(props) {\n  const { sortArticles } = props;\n  return (\n    <section>\n      Sort by:\n      <button id=\"comment_count\" onClick={sortArticles}>\n        comments\n      </button>\n      <button id=\"created_at\" onClick={sortArticles}>\n        date\n      </button>\n      <button id=\"votes\" onClick={sortArticles}>\n        votes\n      </button>\n    </section>\n  );\n}\n\nexport { SortByButtons };\n","import React from \"react\";\nimport * as api from \"../../api\";\nimport { ArticleCard } from \"../Cards/ArticleCard\";\nimport { SortByButtons } from \"../ButtonsAndForms/SortByButtons\";\nimport { ErrorPage } from \"../PagesAndSections/ErrorPage\";\nimport { Loading } from \"../PagesAndSections/Loading\";\n\nclass ArticlesList extends React.Component {\n  state = {\n    articles: null,\n    comment_count: { order: \"desc\" },\n    votes: { order: \"desc\" },\n    created_at: { order: \"desc\" },\n    err: null\n  };\n\n  render() {\n    const { articles, err } = this.state;\n\n    if (err) return <ErrorPage err={err} />;\n    if (articles) {\n      return (\n        <main>\n          <h2>Articles List {this.props.topic_slug}</h2>\n          <SortByButtons sortArticles={this.sortArticles} />\n          <ul>\n            {this.state.articles.map(article => {\n              return <ArticleCard article={article} key={article.article_id} />;\n            })}\n          </ul>\n        </main>\n      );\n    } else\n      return (\n        <main>\n          <Loading />\n        </main>\n      );\n  }\n\n  componentDidMount() {\n    this.fetchArticles();\n  }\n\n  fetchArticles = () => {\n    const { topic_slug } = this.props;\n    api\n      .getArticles(topic_slug)\n      .then(articles => {\n        this.setState({ articles, err: null });\n      })\n      .catch(err => {\n        this.setState({ err });\n      });\n  };\n\n  sortArticles = event => {\n    const sort_by = event.target.id;\n    const order = this.state[sort_by].order;\n\n    api\n      .getArticles(null, sort_by, order)\n      .then(articles => {\n        let newOrder = \"asc\";\n        if (order === \"asc\") {\n          newOrder = \"desc\";\n        }\n        this.setState({ articles, [sort_by]: { order: newOrder }, err: null });\n      })\n      .catch(err => {\n        this.setState({ err });\n      });\n  };\n}\n\nexport { ArticlesList };\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport * as api from \"../../api\";\nimport { Loading } from \"../PagesAndSections/Loading\";\nimport { ErrorPage } from \"../PagesAndSections/ErrorPage\";\n\nclass TopicsList extends React.Component {\n  state = {\n    topics: null,\n    isLoading: true,\n    err: null\n  };\n\n  render() {\n    const { topics, err } = this.state;\n    if (err) return <ErrorPage err={err} />;\n    if (topics) {\n      return (\n        <main>\n          <h2>Topics List</h2>\n          <ul>\n            {this.state.topics.map(topic => {\n              return (\n                <li key={topic.slug}>\n                  <Link to={`/articles/topic/${topic.slug}`}>\n                    <h3>{topic.slug}</h3>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </main>\n      );\n    } else\n      return (\n        <main>\n          <Loading />\n        </main>\n      );\n  }\n\n  componentDidMount() {\n    this.fetchTopics();\n  }\n  fetchTopics = () => {\n    api\n      .getTopics()\n      .then(topics => {\n        this.setState({ topics, isLoading: false, err: null });\n      })\n      .catch(err => {\n        this.setState({ err });\n      });\n  };\n}\n\nexport { TopicsList };\n","import React from \"react\";\n\nclass LoginForm extends React.Component {\n  state = {};\n  render() {\n    const { userLoggedIn } = this.props;\n    if (userLoggedIn)\n      return (\n        <section>\n          Hello {userLoggedIn}!\n          <button onClick={this.handleClick} value={null}>\n            Logout?\n          </button>\n        </section>\n      );\n    return (\n      <form>\n        <select name=\"cars\">\n          <option value=\"jessjelly\">jessjelly</option>\n        </select>\n        <button onClick={this.handleClick} value=\"jessjelly\">\n          Login!\n        </button>\n      </form>\n    );\n  }\n\n  handleClick = event => {\n    event.preventDefault();\n    this.props.loginLogout(event.target.value);\n  };\n}\n\nexport { LoginForm };\n","import React from \"react\";\nimport \"./App.css\";\nimport { Router } from \"@reach/router\";\nimport { Header } from \"./components/PagesAndSections/Header\";\nimport { NavBar } from \"./components/PagesAndSections/NavBar\";\nimport { SingleArticle } from \"./components/PagesAndSections/SingleArticle\";\nimport { ArticlesList } from \"./components/Lists/ArticlesList\";\nimport { TopicsList } from \"./components/Lists/TopicsList\";\nimport { ErrorPage } from \"./components/PagesAndSections/ErrorPage\";\nimport { LoginForm } from \"./components/ButtonsAndForms/LoginForm\";\n\nclass App extends React.Component {\n  state = { userLoggedIn: \"jessjelly\" };\n\n  render() {\n    const { userLoggedIn } = this.state;\n    return (\n      <div>\n        <Header />\n        <NavBar />\n        <LoginForm userLoggedIn={userLoggedIn} loginLogout={this.loginLogout} />\n        <Router>\n          <ArticlesList path=\"/\" />\n          <ArticlesList path=\"/articles\" />\n          <SingleArticle\n            path=\"/article/:article_id\"\n            userLoggedIn={userLoggedIn}\n          />\n          <TopicsList path=\"/topics\" />\n          <ArticlesList path=\"/articles/topic/:topic_slug\" />\n          <ErrorPage default />\n        </Router>\n      </div>\n    );\n  }\n\n  loginLogout = updateUserTo => {\n    if (updateUserTo) {\n      this.setState({ userLoggedIn: updateUserTo });\n    } else {\n      this.setState({ userLoggedIn: null });\n    }\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}